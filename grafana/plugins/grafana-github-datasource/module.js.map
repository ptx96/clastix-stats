{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"react\"","webpack:///external \"@grafana/ui\"","webpack:///external \"@grafana/data\"","webpack:///external \"@grafana/runtime\"","webpack:///external \"emotion\"","webpack:///external \"app/core/core_module\"","webpack:///external \"lodash\"","webpack:///../node_modules/tslib/tslib.es6.js","webpack:///./variables.ts","webpack:///./validation.ts","webpack:///./common/annotationsFromDataFrame.ts","webpack:///./DataSource.ts","webpack:///./types.ts","webpack:///./components/selectors.ts","webpack:///./views/ConfigEditor.tsx","webpack:///./components/Forms.tsx","webpack:///./views/QueryEditorRepository.tsx","webpack:///./views/QueryEditorReleases.tsx","webpack:///./views/QueryEditorCommits.tsx","webpack:///./views/QueryEditorIssues.tsx","webpack:///./views/QueryEditorMilestones.tsx","webpack:///./views/QueryEditorPullRequests.tsx","webpack:///./views/QueryEditorTags.tsx","webpack:///./views/QueryEditorContributors.tsx","webpack:///./views/QueryEditorLabels.tsx","webpack:///./views/QueryEditorPackages.tsx","webpack:///./views/QueryEditor.tsx","webpack:///./components/FieldSelect.tsx","webpack:///./views/VariableQueryEditor.tsx","webpack:///./views/AnnotationQueryEditor.tsx","webpack:///./annotations.ts","webpack:///./module.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","__WEBPACK_EXTERNAL_MODULE__3__","__WEBPACK_EXTERNAL_MODULE__4__","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","extendStatics","b","setPrototypeOf","__proto__","Array","__extends","__","this","constructor","__assign","assign","arguments","length","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","push","__values","__read","ar","error","__makeTemplateObject","cooked","raw","replaceVariable","scoped","format","replace","input","newOptions","keys","forEach","isValid","query","queryType","defaultAnnotationEventFinder","userId","login","email","avatarUrl","time","timeEnd","title","text","tags","getAnnotationsFromFrame","frame","options","events","hasTime","hasText","byName","fields","toLowerCase","field","regex","finder","entries","lower","split","RegExp","find","type","setter","anno","values","match","exec","QueryType","PackageType","PullRequestTimeField","IssueTimeField","instanceSettings","templateSrv","filterQuery","DataSource","applyTemplateVariables","updatedQuery","getLabels","repository","owner","getResource","annotationQuery","request","annotation","targets","datasourceId","id","refId","range","interval","toPromise","res","data","timeField","getChoices","to","from","map","metricFindQuery","rangeRaw","item","selectors","ConfigEditor","AccessToken","QueryEditor","Owner","Repository","Query","Ref","AnnotationEditor","container","onSettingReset","prop","event","onSettingUpdate","target","undefined","set","props","onOptionsChange","secureJsonData","secureJsonFields","render","jsonData","secureSettings","href","className","SecretFormField","inputWidth","labelWidth","onChange","onBlur","accessToken","placeholder","onReset","isConfigured","css","githubUrl","summary","DefaultQueryType","Issues","tooltip","children","width","indexOf","getOwnPropertySymbols","propertyIsEnumerable","setRepository","setOwner","LeftColumnWidth","RightColumnWidth","el","currentTarget","gitRef","ref","setRef","timeFieldOptions","filter","setQuery","opt","DefaultPackageType","NPM","packageTypeOptions","names","setNames","packageType","queryEditors","Repositories","component","Labels","Contributors","Tags","Releases","Commits","Milestones","Packages","Pull_Requests","queryTypeOptions","onRunQuery","onKeyChange","queryEditor","queryTypes","includes","val","QueryEditorRepository","repo","containerCss","spannerCss","loading","disabled","definition","datasource","choices","setChoices","change","directive","reactDirective","defaultQuery","templateUrl","setConfigEditor","setVariableQueryEditor","setQueryEditor","setAnnotationQueryCtrl"],"mappings":"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","file":"module.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","module.exports = __WEBPACK_EXTERNAL_MODULE__3__;","module.exports = __WEBPACK_EXTERNAL_MODULE__4__;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { GitHubQuery } from './types';\nimport { TemplateSrv } from '@grafana/runtime';\nimport { ScopedVars } from '@grafana/data';\n\nexport const replaceVariable = (\n  t: TemplateSrv,\n  value?: string,\n  scoped?: ScopedVars,\n  format?: string\n): string | undefined => {\n  return !!value ? t.replace(value, scoped, format) : value;\n};\n\nexport const replaceVariables = (t: TemplateSrv, query: GitHubQuery, scoped: ScopedVars): GitHubQuery => {\n  let updatedQuery = { ...query };\n  updatedQuery = interpolateObject(updatedQuery, t, scoped);\n  if (query.options) {\n    updatedQuery = { ...updatedQuery, options: interpolateObject(query.options, t, scoped) };\n  }\n  return updatedQuery;\n};\n\nconst interpolateObject = (input: any, t: TemplateSrv, scoped: ScopedVars = {}) => {\n  let newOptions = { ...input };\n  Object.keys(newOptions).forEach((key) => {\n    if (key !== 'refId') {\n      if (typeof newOptions[key] === 'string') {\n        if (key === 'query') {\n          newOptions = { ...newOptions, [key]: replaceVariable(t, newOptions[key], scoped, 'csv') };\n        } else {\n          newOptions = { ...newOptions, [key]: replaceVariable(t, newOptions[key], scoped) };\n        }\n      }\n    }\n  });\n  return newOptions;\n};\n","import { GitHubQuery } from './types';\n\nexport const isValid = (query: GitHubQuery): boolean => {\n  // The current requirement is that the query has a querytype\n  // TODO: have each option implement a validation function\n  return !!query.queryType;\n};\n","import { AnnotationEvent, DataFrame, FieldType, Field, KeyValue } from '@grafana/data';\n\ninterface AnnotationEventNames {\n  userId?: string;\n  login?: string;\n  email?: string;\n  avatarUrl?: string;\n  time?: string; // or first time\n  timeEnd?: string;\n  title?: string;\n  text?: string; // or first string\n  tags?: string; // Split on ','\n}\n\nconst defaultAnnotationEventFinder: AnnotationEventNames = {\n  userId: 'userId',\n  login: 'login',\n  email: 'email',\n  avatarUrl: 'avatarUrl',\n  time: 'time',\n  timeEnd: 'timeEnd',\n  title: 'title',\n  text: 'text',\n  tags: 'tags',\n};\n\ninterface AnnotationEventFieldSetter {\n  key: keyof AnnotationEventNames;\n  field: Field;\n\n  regex?: RegExp; // for text\n  split?: string; // for tags\n}\n\nexport interface AnnotationsFromFrameOptions {\n  field?: AnnotationEventNames;\n  regex?: AnnotationEventNames;\n}\n\nexport function getAnnotationsFromFrame(frame: DataFrame, options?: AnnotationsFromFrameOptions): AnnotationEvent[] {\n  const events: AnnotationEvent[] = [];\n  if (!frame || !frame.length) {\n    return events;\n  }\n\n  let hasTime = false;\n  let hasText = false;\n  const byName: KeyValue<Field> = {};\n  for (const f of frame.fields) {\n    byName[f.name.toLowerCase()] = f;\n  }\n\n  options = {\n    field: {},\n    regex: {},\n    ...options,\n  };\n\n  const fields: AnnotationEventFieldSetter[] = [];\n  const finder: AnnotationEventNames = {\n    ...defaultAnnotationEventFinder,\n    ...options?.field,\n  };\n  for (const [key, value] of Object.entries(finder)) {\n    const lower = value ? value.toLowerCase() : '';\n    if (lower && byName[lower]) {\n      const v: AnnotationEventFieldSetter = {\n        key: key as keyof AnnotationEventNames,\n        field: byName[lower],\n      };\n      switch (v.key) {\n        case 'time':\n          hasTime = true;\n          break;\n        case 'text':\n          hasText = true;\n          break;\n        case 'tags':\n          v.split = ',';\n          break;\n      }\n      const regex = options.regex![v.key];\n      if (regex) {\n        v.regex = new RegExp(regex);\n      }\n      fields.push(v);\n    }\n  }\n  if (!hasTime) {\n    const field = frame.fields.find((f) => f.type === FieldType.time);\n    if (!field) {\n      return []; // no time fields exist\n    }\n    fields.push({\n      key: 'time',\n      field,\n    });\n  }\n\n  if (!hasText) {\n    const field = frame.fields.find((f) => f.type === FieldType.string);\n    if (!field) {\n      return []; // no text fields exist\n    }\n    const setter: AnnotationEventFieldSetter = {\n      key: 'text',\n      field,\n    };\n\n    if (options?.regex?.text) {\n      setter.regex = new RegExp(options.regex.text);\n    }\n    fields.push(setter);\n  }\n\n  // Add each value to the string\n  for (let i = 0; i < frame.length; i++) {\n    const anno: AnnotationEvent = {};\n    for (const f of fields) {\n      let v = f.field.values.get(i);\n      if (f.regex) {\n        const match = f.regex.exec(v);\n        if (match) {\n          v = match[1] ? match[1] : match[0];\n        }\n      }\n      if (f.split) {\n        v = (v as string).split(',');\n      }\n      (anno as any)[f.key] = v;\n    }\n    events.push(anno);\n  }\n\n  return events;\n}\n","import {\n  AnnotationEvent,\n  DataFrame,\n  DataFrameView,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceInstanceSettings,\n  MetricFindValue,\n  ScopedVars,\n} from '@grafana/data';\nimport { DataSourceWithBackend, getTemplateSrv } from '@grafana/runtime';\nimport { GithubDataSourceOptions, GitHubQuery, GitHubVariableQuery, Label } from './types';\nimport { replaceVariables } from './variables';\nimport { isValid } from './validation';\nimport { getAnnotationsFromFrame } from 'common/annotationsFromDataFrame';\n\nexport class DataSource extends DataSourceWithBackend<GitHubQuery, GithubDataSourceOptions> {\n  templateSrv = getTemplateSrv();\n\n  constructor(instanceSettings: DataSourceInstanceSettings<GithubDataSourceOptions>) {\n    super(instanceSettings);\n  }\n\n  // Only execute queries that have a query type\n  filterQuery = (query: GitHubQuery) => {\n    return isValid(query);\n  };\n\n  applyTemplateVariables(query: GitHubQuery, scoped: ScopedVars): Record<string, any> {\n    return replaceVariables(this.templateSrv, query, scoped);\n  }\n\n  async getLabels(repository: string, owner: string, query?: string): Promise<Label[]> {\n    return this.getResource('labels', {\n      repository,\n      owner,\n      query,\n    });\n  }\n\n  async annotationQuery(request: any): Promise<AnnotationEvent[]> {\n    const { annotation } = request.annotation;\n\n    const query = {\n      targets: [\n        {\n          ...annotation,\n          datasourceId: this.id,\n          refId: this.name,\n        },\n      ],\n      range: request.range,\n      interval: request.interval,\n    } as DataQueryRequest<GitHubQuery>;\n\n    const res = await this.query(query).toPromise();\n\n    if (!res?.data?.length) {\n      return [];\n    }\n    return getAnnotationsFromFrame(res.data[0], {\n      field: {\n        // title: `${request.annotation.name} - ${annotation.queryType}`,\n        time: annotation.timeField, // or first time field\n        text: annotation.field || 'name',\n      },\n    });\n  }\n\n  async getChoices(query: GitHubQuery): Promise<string[]> {\n    const request = {\n      targets: [\n        {\n          ...query,\n          refId: 'metricFindQuery',\n        },\n      ],\n      range: {\n        to: {},\n        from: {},\n      },\n    } as DataQueryRequest;\n\n    try {\n      const res = await this.query(request).toPromise();\n      const columns = res.data[0]?.fields.map((f: any) => f.name) || [];\n      return columns;\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  async metricFindQuery(query: GitHubVariableQuery, options: any): Promise<MetricFindValue[]> {\n    const request = {\n      targets: [\n        {\n          ...query,\n          refId: 'metricFindQuery',\n        },\n      ],\n      range: options.range,\n      rangeRaw: options.rangeRaw,\n    } as DataQueryRequest;\n\n    let res: DataQueryResponse;\n\n    try {\n      res = await this.query(request).toPromise();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    if (!res || !res.data || res.data.length < 0) {\n      return [];\n    }\n\n    const view = new DataFrameView(res.data[0] as DataFrame);\n    return view.map((item) => {\n      return {\n        text: item[query.field || 'name'],\n      };\n    });\n  }\n}\n","import { DataQuery, DataSourceJsonData } from '@grafana/data';\n\nexport interface Label {\n  color: string;\n  description: string;\n  name: string;\n}\n\nexport interface RepositoryOptions {\n  repository?: string;\n  owner?: string;\n}\n\nexport interface GithubEnterpriseOptions {\n  githubUrl?: string;\n}\n\nexport interface GithubDataSourceOptions extends DataSourceJsonData, RepositoryOptions, GithubEnterpriseOptions {\n  // Any global settings\n}\n\nexport interface GithubSecureJsonData {\n  // accessToken is set if the user is using a Personal Access Token to connect to GitHub\n  accessToken?: string;\n}\n\nexport enum QueryType {\n  Commits = 'Commits',\n  Issues = 'Issues',\n  Contributors = 'Contributors',\n  Tags = 'Tags',\n  Releases = 'Releases',\n  Pull_Requests = 'Pull_Requests',\n  Labels = 'Labels',\n  Repositories = 'Repositories',\n  Organizations = 'Organizations',\n  GraphQL = 'GraphQL',\n  Milestones = 'Milestones',\n  Packages = 'Packages',\n}\n\nexport enum PackageType {\n  NPM = 'NPM',\n  RUBYGEMS = 'RUBYGEMS',\n  MAVEN = 'MAVEN',\n  DOCKER = 'DOCKER',\n  DEBIAN = 'DEBIAN',\n  NUGET = 'NUGET',\n  PYPI = 'PYPI',\n}\n\nexport enum PullRequestTimeField {\n  ClosedAt,\n  CreatedAt,\n  MergedAt,\n  None,\n}\n\nexport enum IssueTimeField {\n  CreatedAt,\n  ClosedAt,\n}\n\nexport interface Indexable {\n  [index: string]: any;\n}\n\nexport interface ReleasesOptions extends Indexable {}\nexport interface TagsOptions extends Indexable {}\nexport interface PullRequestsOptions extends Indexable {\n  timeField?: PullRequestTimeField;\n  query?: string;\n}\n\nexport interface CommitsOptions extends Indexable {\n  gitRef?: string;\n}\n\nexport interface ContributorsOptions extends Indexable {\n  query?: string;\n}\n\nexport interface LabelsOptions extends Indexable {\n  query?: string;\n}\n\nexport interface IssuesOptions extends Indexable {\n  timeField?: IssueTimeField;\n  query?: string;\n}\n\nexport interface PackagesOptions extends Indexable {\n  names?: string;\n  packageType?: PackageType;\n}\n\nexport interface MilestonesOptions extends Indexable {\n  query?: string;\n}\n\nexport interface GitHubQuery extends Indexable, DataQuery, RepositoryOptions {\n  options?:\n    | PullRequestsOptions\n    | ReleasesOptions\n    | LabelsOptions\n    | TagsOptions\n    | CommitsOptions\n    | IssuesOptions\n    | ContributorsOptions;\n}\n\nexport interface GitHubVariableQuery extends GitHubQuery {\n  field?: string;\n}\n\nexport interface GitHubAnnotationQuery extends GitHubVariableQuery {\n  timeField?: string;\n}\n\nexport const DefaultQueryType = QueryType.Issues;\n","import { E2ESelectors } from '@grafana/e2e-selectors';\n\nexport const Components = {\n  ConfigEditor: {\n    AccessToken: {\n      input: 'Config editor access token',\n    },\n  },\n  QueryEditor: {\n    Owner: {\n      input: 'Query editor owner',\n    },\n    Repository: {\n      input: 'Query editor repository',\n    },\n    Query: {\n      input: 'Query editor query',\n    },\n    Ref: {\n      input: 'Query editor ref',\n    },\n  },\n  AnnotationEditor: {\n    container: 'Annotation editor container',\n  },\n};\n\nexport const selectors: { components: E2ESelectors<typeof Components> } = {\n  components: Components,\n};\n","import React, { PureComponent } from 'react';\nimport { onUpdateDatasourceJsonDataOption, DataSourcePluginOptionsEditorProps } from '@grafana/data';\nimport { Input, InlineFormLabel, LegacyForms, InfoBox, Icon } from '@grafana/ui';\nimport { GithubDataSourceOptions, GithubSecureJsonData } from '../types';\nimport { selectors } from 'components/selectors';\n\nexport type ConfigEditorProps = DataSourcePluginOptionsEditorProps<GithubDataSourceOptions, GithubSecureJsonData>;\n\nexport class ConfigEditor extends PureComponent<ConfigEditorProps> {\n  onSettingReset = (prop: string) => (event: any) => {\n    this.onSettingUpdate(prop, false)({ target: { value: undefined } });\n  };\n\n  onSettingUpdate = (prop: string, set = true) => (event: any) => {\n    const { onOptionsChange, options } = this.props;\n    onOptionsChange({\n      ...options,\n      secureJsonData: {\n        ...options.secureJsonData,\n        [prop]: event.target.value,\n      },\n      secureJsonFields: {\n        ...options.secureJsonFields,\n        [prop]: set,\n      },\n    });\n  };\n\n  render() {\n    const {\n      options: { jsonData, secureJsonData, secureJsonFields },\n    } = this.props;\n    const secureSettings = (secureJsonData || {}) as GithubSecureJsonData;\n    return (\n      <>\n        <InfoBox title=\"Access Token Permissions\">\n          <p>\n            To create a new Access Token, navigate to{' '}\n            <a href=\"https://github.com/settings/tokens\">\n              Personal Access Tokens <Icon name=\"link\" />\n            </a>{' '}\n            and create a click &quot;Generate new token.&quot;\n          </p>\n          <p>Ensure that your token has the following permissions:</p>\n          <h4>For all repositories:</h4>\n          <pre>\n            <ul>\n              <li>public_repo</li>\n              <li>repo:status</li>\n              <li>repo_deployment</li>\n              <li>read:packages</li>\n            </ul>\n            <ul>\n              <li>read:user</li>\n              <li>user:email</li>\n            </ul>\n          </pre>\n          <h4>An extra setting is required for private repositories:</h4>\n          <pre>\n            <ul>\n              <li>repo (Full control of private repositories)</li>\n            </ul>\n          </pre>\n        </InfoBox>\n        <div className=\"gf-form-group\">\n          <h3 className=\"page-heading\">Service Account Access</h3>\n          <div className=\"gf-form\">\n            <LegacyForms.SecretFormField\n              aria-label={selectors.components.ConfigEditor.AccessToken.input}\n              label=\"Access Token\"\n              inputWidth={27}\n              labelWidth={10}\n              onChange={this.onSettingUpdate('accessToken', false)}\n              onBlur={this.onSettingUpdate('accessToken')}\n              value={secureSettings.accessToken || ''}\n              placeholder=\"Github Personal Access Token\"\n              onReset={this.onSettingReset('accessToken')}\n              isConfigured={secureJsonFields!['accessToken']}\n            />\n          </div>\n        </div>\n        <div className=\"gf-form-group\">\n          <h3 className=\"page-heading\">GitHub Enterprise</h3>\n          <div className=\"gf-form\">\n            <InlineFormLabel className=\"width-10\">GitHub Enterprise URL</InlineFormLabel>\n            <Input\n              css=\"\"\n              className=\"width-27\"\n              value={jsonData.githubUrl}\n              placeholder=\"URL of GitHub Enterprise\"\n              summary=\"URL for GitHub Enterprise, such as https://github.company.com, leave blank if using github.com\"\n              onChange={onUpdateDatasourceJsonDataOption(this.props, 'githubUrl')}\n            />\n          </div>\n        </div>\n        <InfoBox title=\"GitHub Enterprise\">\n          <p>For GitHub Enterprise enter the URL, such as https://github.company.com</p>\n          <p>Leave blank if not using GitHub Enterprise, which will default to github.com</p>\n        </InfoBox>\n        {/*<div className=\"gf-form-group\">\n          <h3 className=\"page-heading\">Default Query Options</h3>\n          <div className=\"gf-form\">\n            <InlineFormLabel className=\"width-10\">Owner</InlineFormLabel>\n            <Input\n              css=\"\"\n              className=\"width-9\"\n              value={jsonData.owner}\n              placeholder=\"username or organization\"\n              onChange={onUpdateDatasourceJsonDataOption(this.props, 'owner')}\n            />\n          </div>\n          <div className=\"gf-form\">\n            <InlineFormLabel className=\"width-10\">Repository</InlineFormLabel>\n            <Input\n              css=\"\"\n              className=\"width-9\"\n              value={jsonData.repository}\n              placeholder=\"the repo name\"\n              onChange={onUpdateDatasourceJsonDataOption(this.props, 'repository')}\n            />\n          </div>\n        </div>*/}\n      </>\n    );\n  }\n}\n\nexport default ConfigEditor;\n","import React, { InputHTMLAttributes, FunctionComponent } from 'react';\nimport { InlineFormLabel } from '@grafana/ui';\n\nexport interface Props extends InputHTMLAttributes<HTMLInputElement> {\n  label: string;\n  tooltip?: string;\n  labelWidth?: number;\n  children?: React.ReactNode;\n}\n\nexport const QueryField: FunctionComponent<Partial<Props>> = ({ label, labelWidth = 8, tooltip, children }) => (\n  <>\n    <InlineFormLabel width={labelWidth} className=\"query-keyword\" tooltip={tooltip}>\n      {label}\n    </InlineFormLabel>\n    {children}\n  </>\n);\n\nexport const QueryRowTerminator = () => {\n  return (\n    <div className=\"gf-form gf-form--grow\">\n      <div className=\"gf-form-label gf-form-label--grow\" />\n    </div>\n  );\n};\n\nexport const QueryInlineField = ({ ...props }) => {\n  return (\n    <QueryEditorRow>\n      <QueryField {...props} />\n    </QueryEditorRow>\n  );\n};\n\nexport const QueryEditorRow = (props: any) => {\n  return (\n    <div className=\"gf-form-inline\">\n      {props.children}\n      <QueryRowTerminator />\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { Input, InlineFormLabel } from '@grafana/ui';\n\nimport { QueryEditorRow } from '../components/Forms';\nimport { RepositoryOptions } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\nimport { selectors } from '../components/selectors';\n\ninterface Props extends RepositoryOptions {\n  onChange: (value: RepositoryOptions) => void;\n}\n\nconst QueryEditorRepositories = (props: Props) => {\n  const [repository, setRepository] = useState<string>(props.repository || '');\n  const [owner, setOwner] = useState<string>(props.owner || '');\n\n  return (\n    <QueryEditorRow>\n      <InlineFormLabel\n        className=\"query-keyword\"\n        tooltip=\"The owner (organization or user) of the GitHub repository (example: 'grafana')\"\n        width={LeftColumnWidth}\n      >\n        Owner\n      </InlineFormLabel>\n      <Input\n        aria-label={selectors.components.QueryEditor.Owner.input}\n        css=\"\"\n        width={RightColumnWidth}\n        value={owner}\n        onChange={(el) => setOwner(el.currentTarget.value)}\n        onBlur={(el) =>\n          props.onChange({\n            ...props,\n            owner: el.currentTarget.value,\n          })\n        }\n      />\n      <InlineFormLabel className=\"query-keyword\" tooltip=\"The name of the GitHub repository\" width={LeftColumnWidth}>\n        Repository\n      </InlineFormLabel>\n      <Input\n        aria-label={selectors.components.QueryEditor.Repository.input}\n        css=\"\"\n        width={RightColumnWidth}\n        value={repository}\n        onChange={(el) => setRepository(el.currentTarget.value)}\n        onBlur={(el) =>\n          props.onChange({\n            ...props,\n            repository: el.currentTarget.value,\n          })\n        }\n      />\n    </QueryEditorRow>\n  );\n};\n\nexport default QueryEditorRepositories;\n","import React from 'react';\n\nconst QueryEditorReleases = () => <></>;\n\nexport default QueryEditorReleases;\n","import React, { useState } from 'react';\nimport { Input } from '@grafana/ui';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { CommitsOptions } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\nimport { selectors } from 'components/selectors';\n\ninterface Props extends CommitsOptions {\n  onChange: (value: CommitsOptions) => void;\n}\n\nconst QueryEditorCommits = (props: Props) => {\n  const [ref, setRef] = useState<string>(props.gitRef || '');\n  return (\n    <>\n      <QueryInlineField labelWidth={LeftColumnWidth} label=\"Ref (Branch / Tag)\">\n        <Input\n          aria-label={selectors.components.QueryEditor.Ref.input}\n          css=\"\"\n          width={RightColumnWidth}\n          value={ref}\n          onChange={(el) => setRef(el.currentTarget.value)}\n          onBlur={(el) => props.onChange({ ...props, gitRef: el.currentTarget.value })}\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorCommits;\n","import React, { useState } from 'react';\n\nimport { Input, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { IssuesOptions, IssueTimeField } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\n\ninterface Props extends IssuesOptions {\n  onChange: (value: IssuesOptions) => void;\n}\n\nconst timeFieldOptions: Array<SelectableValue<IssueTimeField>> = Object.keys(IssueTimeField)\n  .filter((_, i) => IssueTimeField[i] !== undefined)\n  .map((_, i) => {\n    return {\n      label: `${IssueTimeField[i]}`,\n      value: i as IssueTimeField,\n    };\n  });\n\nconst defaultTimeField = 0 as IssueTimeField;\n\nconst QueryEditorIssues = (props: Props) => {\n  const [query, setQuery] = useState<string>(props.query || '');\n  return (\n    <>\n      <QueryInlineField\n        labelWidth={LeftColumnWidth}\n        label=\"Query\"\n        tooltip=\"For more information, visit https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests\"\n      >\n        <Input\n          css=\"\"\n          value={query}\n          width={RightColumnWidth * 2 + LeftColumnWidth}\n          onChange={(el) => setQuery(el.currentTarget.value)}\n          onBlur={(el) =>\n            props.onChange({\n              ...props,\n              query: el.currentTarget.value,\n            })\n          }\n        />\n      </QueryInlineField>\n      <QueryInlineField\n        labelWidth={LeftColumnWidth}\n        label=\"Time Field\"\n        tooltip=\"The time field to filter on th time range\"\n      >\n        <Select\n          width={RightColumnWidth}\n          options={timeFieldOptions}\n          value={props.timeField || defaultTimeField}\n          onChange={(opt) =>\n            props.onChange({\n              ...props,\n              timeField: opt.value,\n            })\n          }\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorIssues;\n","import React, { useState } from 'react';\n\nimport { Input } from '@grafana/ui';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { MilestonesOptions } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\n\ninterface Props extends MilestonesOptions {\n  onChange: (value: MilestonesOptions) => void;\n}\n\nconst QueryEditorMilestones = (props: Props) => {\n  const [query, setQuery] = useState<string>(props.query || '');\n  return (\n    <>\n      <QueryInlineField labelWidth={LeftColumnWidth} label=\"Query\" tooltip=\"Query milestones by title\">\n        <Input\n          css=\"\"\n          value={query}\n          width={RightColumnWidth * 2 + LeftColumnWidth}\n          onChange={(el) => setQuery(el.currentTarget.value)}\n          onBlur={(el) =>\n            props.onChange({\n              ...props,\n              query: el.currentTarget.value,\n            })\n          }\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorMilestones;\n","import React, { useState } from 'react';\n\nimport { Input, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { PullRequestsOptions, PullRequestTimeField } from '../types';\n\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\n\ninterface Props extends PullRequestsOptions {\n  onChange: (value: PullRequestsOptions) => void;\n}\n\nconst timeFieldOptions: Array<SelectableValue<PullRequestTimeField>> = Object.keys(PullRequestTimeField)\n  .filter((_, i) => PullRequestTimeField[i] !== undefined)\n  .map((_, i) => {\n    return {\n      label: `${PullRequestTimeField[i]}`,\n      value: i as PullRequestTimeField,\n    };\n  });\n\nconst defaultTimeField = timeFieldOptions[0].value;\n\nconst QueryEditorPullRequests = (props: Props) => {\n  const [query, setQuery] = useState<string>(props.query || '');\n  return (\n    <>\n      <QueryInlineField\n        labelWidth={LeftColumnWidth}\n        label=\"Query\"\n        tooltip=\"For more information, visit https://docs.github.com/en/github/searching-for-information-on-github/searching-issues-and-pull-requests\"\n      >\n        <Input\n          css=\"\"\n          value={query}\n          width={RightColumnWidth}\n          onChange={(el) => setQuery(el.currentTarget.value)}\n          onBlur={(el) =>\n            props.onChange({\n              ...props,\n              query: el.currentTarget.value,\n            })\n          }\n        />\n      </QueryInlineField>\n      <QueryInlineField\n        labelWidth={LeftColumnWidth}\n        label=\"Time Field\"\n        tooltip=\"The time field to filter on the time range. WARNING: If selecting 'None', be mindful of the amount of data being queried. On larger repositories, querying all pull requests could easily cause rate limiting\"\n      >\n        <Select\n          width={RightColumnWidth}\n          options={timeFieldOptions}\n          value={props.timeField || defaultTimeField}\n          onChange={(opt) =>\n            props.onChange({\n              ...props,\n              timeField: opt.value,\n            })\n          }\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorPullRequests;\n","import React from 'react';\n\nconst QueryEditorTags = () => <></>;\nexport default QueryEditorTags;\n","import React, { useState } from 'react';\nimport { Input } from '@grafana/ui';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { ContributorsOptions } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\n\ninterface Props extends ContributorsOptions {\n  onChange: (value: ContributorsOptions) => void;\n}\n\nconst QueryEditorContributors = (props: Props) => {\n  const [query, setQuery] = useState<string>(props.query || '');\n  return (\n    <>\n      <QueryInlineField labelWidth={LeftColumnWidth} label=\"Query (optional)\">\n        <Input\n          css=\"\"\n          width={RightColumnWidth}\n          value={query}\n          onChange={(el) => setQuery(el.currentTarget.value)}\n          onBlur={(el) => props.onChange({ ...props, query: el.currentTarget.value })}\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorContributors;\n","import React, { useState } from 'react';\nimport { Input } from '@grafana/ui';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { LabelsOptions } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\n\ninterface Props extends LabelsOptions {\n  onChange: (value: LabelsOptions) => void;\n}\n\nconst QueryEditorLabels = (props: Props) => {\n  const [query, setQuery] = useState<string>(props.query || '');\n  return (\n    <>\n      <QueryInlineField labelWidth={LeftColumnWidth} label=\"Query (optional)\">\n        <Input\n          css=\"\"\n          width={RightColumnWidth}\n          value={query}\n          onChange={(el) => setQuery(el.currentTarget.value)}\n          onBlur={(el) => props.onChange({ ...props, query: el.currentTarget.value })}\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorLabels;\n","import React, { useState } from 'react';\n\nimport { Input, Select } from '@grafana/ui';\nimport { SelectableValue } from '@grafana/data';\n\nimport { QueryInlineField } from '../components/Forms';\nimport { PackagesOptions, PackageType } from '../types';\nimport { RightColumnWidth, LeftColumnWidth } from './QueryEditor';\n\ninterface Props extends PackagesOptions {\n  onChange: (value: PackagesOptions) => void;\n}\n\nconst DefaultPackageType = PackageType.NPM;\n\nconst packageTypeOptions: Array<SelectableValue<string>> = Object.keys(PackageType).map((v) => {\n  return {\n    label: v.replace('/_/gi', ' '),\n    value: v,\n  };\n});\n\nconst QueryEditorPackages = (props: Props) => {\n  const [names, setNames] = useState<string>(props.names || '');\n\n  return (\n    <>\n      <QueryInlineField labelWidth={LeftColumnWidth} label=\"Package type\">\n        <Select\n          options={packageTypeOptions}\n          value={props.packageType || DefaultPackageType}\n          width={RightColumnWidth}\n          onChange={(opt) =>\n            props.onChange({\n              ...props,\n              packageType: opt.value as PackageType,\n            })\n          }\n        />\n      </QueryInlineField>\n      <QueryInlineField\n        labelWidth={LeftColumnWidth}\n        label=\"Names\"\n        tooltip=\"Search for packages using a comma delimited list of names\"\n      >\n        <Input\n          css=\"\"\n          value={names}\n          width={RightColumnWidth * 2 + LeftColumnWidth}\n          onChange={(el) => setNames(el.currentTarget.value)}\n          onBlur={(el) =>\n            props.onChange({\n              ...props.query,\n              names: el.currentTarget.value,\n            })\n          }\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default QueryEditorPackages;\n","import React, { ReactNode, useCallback } from 'react';\nimport { QueryEditorProps, SelectableValue } from '@grafana/data';\nimport { Select } from '@grafana/ui';\n\nimport { DataSource } from '../DataSource';\nimport { GithubDataSourceOptions, GitHubQuery, QueryType, DefaultQueryType } from '../types';\nimport { QueryInlineField } from '../components/Forms';\nimport { isValid } from '../validation';\n\nimport QueryEditorRepository from './QueryEditorRepository';\nimport QueryEditorReleases from './QueryEditorReleases';\nimport QueryEditorCommits from './QueryEditorCommits';\nimport QueryEditorIssues from './QueryEditorIssues';\nimport QueryEditorMilestones from './QueryEditorMilestones';\nimport QueryEditorPullRequests from './QueryEditorPullRequests';\nimport QueryEditorTags from './QueryEditorTags';\nimport QueryEditorContributors from './QueryEditorContributors';\nimport QueryEditorLabels from './QueryEditorLabels';\nimport QueryEditorPackages from './QueryEditorPackages';\n\ninterface Props extends QueryEditorProps<DataSource, GitHubQuery, GithubDataSourceOptions> {\n  queryTypes?: string[];\n}\nexport const LeftColumnWidth = 10;\nexport const RightColumnWidth = 36;\n\n/* eslint-disable react/display-name */\nconst queryEditors: {\n  [key: string]: { component: (props: Props, onChange: (val: any) => void) => ReactNode };\n} = {\n  [QueryType.Repositories]: {\n    component: (_: Props, onChange: (val: any) => void) => <></>,\n  },\n  [QueryType.Labels]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorLabels {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n  [QueryType.Contributors]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorContributors {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n  [QueryType.Tags]: {\n    component: (props: Props, _: (val: any) => void) => <QueryEditorTags {...(props.query.options || {})} />,\n  },\n  [QueryType.Releases]: {\n    component: (props: Props, _: (val: any) => void) => <QueryEditorReleases {...(props.query.options || {})} />,\n  },\n  [QueryType.Commits]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorCommits {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n  [QueryType.Milestones]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorMilestones {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n  [QueryType.Issues]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorIssues {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n  [QueryType.Packages]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorPackages {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n  [QueryType.Pull_Requests]: {\n    component: (props: Props, onChange: (val: any) => void) => (\n      <QueryEditorPullRequests {...(props.query.options || {})} onChange={onChange} />\n    ),\n  },\n};\n\n/* eslint-enable react/display-name */\n\nconst queryTypeOptions: Array<SelectableValue<string>> = Object.keys(QueryType).map((v) => {\n  return {\n    label: v.replace(/_/gi, ' '),\n    value: v,\n  };\n});\n\nconst QueryEditor = (props: Props) => {\n  const onChange = useCallback(\n    (value: GitHubQuery) => {\n      props.onChange(value);\n\n      if (isValid(value)) {\n        props.onRunQuery();\n      }\n    },\n    [props]\n  );\n\n  const onKeyChange = useCallback(\n    (key: string, value: any) => {\n      onChange({\n        ...props.query,\n        [key]: value,\n      });\n    },\n    [onChange, props.query]\n  );\n\n  const queryEditor = queryEditors[props.query.queryType || DefaultQueryType];\n  const queryTypes = props.queryTypes || Object.keys(queryEditors);\n  return (\n    <>\n      <QueryInlineField label=\"Query Type\" tooltip=\"What resource are you querying for?\" labelWidth={LeftColumnWidth}>\n        <Select\n          width={RightColumnWidth}\n          options={queryTypeOptions.filter((v) => queryTypes.includes(v.value!))}\n          value={props.query.queryType}\n          onChange={(val) => onKeyChange('queryType', val.value || DefaultQueryType)}\n        />\n      </QueryInlineField>\n\n      <QueryEditorRepository\n        repository={props.query.repository}\n        owner={props.query.owner}\n        onChange={(repo) => {\n          onChange({\n            ...props.query,\n            ...repo,\n          });\n        }}\n      />\n\n      {queryEditor ? (\n        queryEditor.component(props, (value: any) => onKeyChange('options', !!value ? value : undefined))\n      ) : (\n        <span>Unsupported Query Type</span>\n      )}\n    </>\n  );\n};\n\nexport default QueryEditor;\n","import React from 'react';\nimport { Select, Spinner } from '@grafana/ui';\nimport { css } from 'emotion';\n\ninterface Props {\n  onChange: (value: string) => void;\n  value?: string;\n  options: string[];\n  width: number;\n  loading: boolean;\n}\n\nconst containerCss = css`\n  align-items: center;\n`;\n\nconst spannerCss = css`\n  margin: 0px 3px;\n  padding: 0px 3px;\n`;\n\nconst FieldSelect = (props: Props) => {\n  const { onChange, options, value, width, loading } = props;\n  return (\n    <div className={`${containerCss} gf-form-inline`}>\n      <Select\n        value={value}\n        onChange={(opt) => onChange(opt.value!)}\n        width={width}\n        disabled={loading}\n        placeholder={loading ? 'Loading...' : 'Select...'}\n        options={options.map((opt) => {\n          return {\n            label: opt,\n            value: opt,\n          };\n        })}\n      />\n      {loading && (\n        <div>\n          <Spinner className={spannerCss} />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FieldSelect;\n","import React, { useMemo, useState } from 'react';\n\nimport QueryEditor from './QueryEditor';\nimport { DataSource } from '../DataSource';\nimport { GitHubVariableQuery, DefaultQueryType, QueryType } from '../types';\nimport { QueryInlineField } from '../components/Forms';\nimport FieldSelect from '../components/FieldSelect';\nimport { isValid } from '../validation';\n\ninterface Props {\n  query: GitHubVariableQuery;\n  onChange: (query: GitHubVariableQuery, definition: string) => void;\n  datasource: DataSource;\n}\n\nconst VariableQueryEditor = (props: Props) => {\n  const definition = `${props.datasource.name} - ${props.query.queryType || DefaultQueryType}`;\n  const [choices, setChoices] = useState<string[]>();\n\n  useMemo(async () => {\n    if (isValid(props.query)) {\n      setChoices(await props.datasource.getChoices(props.query));\n    }\n  }, [props.query, props.datasource]);\n\n  return (\n    <>\n      <QueryEditor\n        query={props.query}\n        datasource={props.datasource}\n        onChange={(query) =>\n          props.onChange(\n            {\n              ...query,\n              field: props.query.field,\n            },\n            definition\n          )\n        }\n        onRunQuery={() => {}}\n        queryTypes={[\n          QueryType.Repositories,\n          QueryType.Contributors,\n          QueryType.Tags,\n          QueryType.Releases,\n          QueryType.Labels,\n          QueryType.Milestones,\n        ]}\n      />\n      <QueryInlineField\n        width={10}\n        labelWidth={10}\n        label=\"Display Field\"\n        tooltip=\"This field determines the text / value used for the variable\"\n      >\n        <FieldSelect\n          onChange={(value) =>\n            props.onChange(\n              {\n                ...props.query,\n                field: value,\n              },\n              definition\n            )\n          }\n          options={choices || []}\n          width={64}\n          value={props.query.field}\n          loading={!choices}\n        />\n      </QueryInlineField>\n    </>\n  );\n};\n\nexport default VariableQueryEditor;\n","import React, { useMemo, useState, useCallback } from 'react';\nimport coreModule from 'grafana/app/core/core_module';\n\nimport { AnnotationQueryRequest } from '@grafana/data';\n\nimport QueryEditor from './QueryEditor';\nimport { DataSource } from '../DataSource';\nimport { GitHubAnnotationQuery, QueryType } from '../types';\nimport { QueryInlineField } from '../components/Forms';\nimport FieldSelect from '../components/FieldSelect';\nimport { isValid } from '../validation';\nimport { selectors } from 'components/selectors';\n\ninterface Props {\n  datasource: DataSource;\n  annotation: AnnotationQueryRequest<GitHubAnnotationQuery>;\n  change: (query: AnnotationQueryRequest<GitHubAnnotationQuery>) => void;\n}\n\nconst AnnotationQueryEditor = (props: Props) => {\n  const [choices, setChoices] = useState<string[]>();\n  const { annotation } = props;\n\n  useMemo(async () => {\n    if (isValid(props.annotation.annotation)) {\n      setChoices(await props.datasource.getChoices(props.annotation.annotation));\n    }\n  }, [props.annotation.annotation, props.datasource]);\n\n  const onChange = useCallback(\n    (query: GitHubAnnotationQuery) => {\n      props.change({\n        ...props.annotation,\n        annotation: {\n          ...annotation.annotation,\n          ...query,\n          datasource: props.datasource.name,\n        },\n      });\n    },\n    [props, annotation.annotation]\n  );\n\n  return (\n    <div aria-label={selectors.components.AnnotationEditor.container}>\n      <QueryEditor\n        query={annotation.annotation}\n        datasource={props.datasource}\n        onChange={(query) =>\n          onChange({\n            ...query,\n            field: annotation.annotation.field,\n          })\n        }\n        onRunQuery={() => {}}\n        queryTypes={[\n          QueryType.Commits,\n          QueryType.Releases,\n          QueryType.Pull_Requests,\n          QueryType.Issues,\n          QueryType.Milestones,\n          QueryType.Tags,\n        ]}\n      />\n\n      {/* Only display the field selection items when the user has created an actual query */}\n      {isValid(props.annotation.annotation) && (\n        <>\n          <QueryInlineField\n            width={10}\n            labelWidth={10}\n            label=\"Display Field\"\n            tooltip=\"This field determines the text / value displayed on the annotation\"\n          >\n            <FieldSelect\n              onChange={(value) =>\n                onChange({\n                  ...annotation.annotation,\n                  field: value,\n                })\n              }\n              options={choices || []}\n              width={64}\n              value={annotation.annotation.field}\n              loading={!choices}\n            />\n          </QueryInlineField>\n          <QueryInlineField\n            width={10}\n            labelWidth={10}\n            label=\"Time Field\"\n            tooltip=\"This field is used to determine where the annotation will display on a graph\"\n          >\n            <FieldSelect\n              onChange={(value) =>\n                onChange({\n                  ...annotation.annotation,\n                  timeField: value,\n                })\n              }\n              options={choices || []}\n              width={64}\n              value={annotation.annotation.timeField}\n              loading={!choices}\n            />\n          </QueryInlineField>\n        </>\n      )}\n    </div>\n  );\n};\n\ncoreModule.directive('githubAnnotationEditor', [\n  'reactDirective',\n  (reactDirective: any) => {\n    return reactDirective(AnnotationQueryEditor, ['annotation', 'datasource', 'change']);\n  },\n]);\n","import './views/AnnotationQueryEditor';\nimport { GitHubAnnotationQuery, DefaultQueryType } from './types';\nimport { DataSource } from './DataSource';\nimport { AnnotationQueryRequest } from '@grafana/data';\nimport { defaultsDeep } from 'lodash';\n\nconst defaultQuery: GitHubAnnotationQuery = {\n  queryType: DefaultQueryType,\n  refId: '',\n};\n\nexport default class AnnotationCtrl {\n  // @ts-ignore\n  annotation: AnnotationQueryRequest<GitHubAnnotationQuery>;\n\n  // @ts-ignore\n  private datasource?: DataSource;\n\n  static templateUrl = 'partials/annotations.editor.html';\n\n  /** @ngInject */\n  constructor() {\n    // @ts-ignore\n    this.annotation.annotation = defaultsDeep(this.annotation.annotation, defaultQuery);\n    // @ts-ignore\n    this.annotation.datasourceId = this.datasource.id;\n  }\n\n  onChange = (query: AnnotationQueryRequest<GitHubAnnotationQuery>) => {\n    this.annotation.annotation = query.annotation;\n  };\n}\n","import { DataSourcePlugin } from '@grafana/data';\nimport { DataSource } from './DataSource';\nimport ConfigEditor from './views/ConfigEditor';\nimport QueryEditor from './views/QueryEditor';\nimport VariableQueryEditor from './views/VariableQueryEditor';\nimport AnnotationCtrl from './annotations';\nimport { GitHubQuery, GithubDataSourceOptions, GithubSecureJsonData } from './types';\n\nexport const plugin = new DataSourcePlugin<DataSource, GitHubQuery, GithubDataSourceOptions, GithubSecureJsonData>(\n  DataSource\n)\n  .setConfigEditor(ConfigEditor)\n  .setVariableQueryEditor(VariableQueryEditor)\n  .setQueryEditor(QueryEditor)\n  .setAnnotationQueryCtrl(AnnotationCtrl);\n"],"sourceRoot":""}