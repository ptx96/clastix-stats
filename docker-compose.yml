---
version: '3'

volumes:
  prometheus_data: {}
  grafana_data: {}

services:

  alertmanager:
    container_name: alertmanager
    hostname: alertmanager
    image: prom/alertmanager
    volumes:
      - ./alertmanager.conf:/etc/alertmanager/alertmanager.conf
    command:
      - '--config.file=/etc/alertmanager/alertmanager.conf'
    ports:
      - "9093:9093"
    restart: unless-stopped

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    links:
      - alertmanager:alertmanager
      - docker-hub-metrics:docker-hub-metrics
      - github-metrics:github-metrics
    ports:
      - "9090:9090"
    restart: on-failure

  grafana:
    container_name: grafana
    hostname: grafana
    image: grafana/grafana
    volumes:
      - ./grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ./grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
      - ./plugins:/var/lib/grafana/plugins
    ports:
      - "3000:3000"
    restart: on-failure

  docker-hub-metrics:
    container_name: docker-hub-metrics
    hostname: docker-hub-metrics
    image: artemkaxboy/docker-hub-exporter
    environment:
    #  IMAGES: "clastix/capsule,clastix/kamaji,clastix/kubectl"
      NAMESPACES: "clastix"
    ports:
      - "9170:9170"
    restart: unless-stopped

  github-metrics:
    container_name: github-metrics
    hostname: github-metrics
    image: infinityworks/github-exporter:latest
    environment:
    #  REPOS: <REPOS you want to monitor>
      ORGS: "clastix"
    #  GITHUB_TOKEN: <your github api token>
    ports:
      - "9171:9171"
    #expose:
    #  - 9171
    restart: unless-stopped
    #tty: true
    #stdin_open: true